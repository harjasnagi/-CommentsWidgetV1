{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harja\\\\Desktop\\\\New folder\\\\SkilloVilla\\\\skillovilla\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comment, setComment] = useState(\"\");\n  let changeFunc = e => {\n    setComment(e.target.value);\n  };\n  const [allComments, setAllComments] = useState([]);\n  let postFunc = () => {\n    setAllComments(allComments => [...allComments, comment]); //https://bobbyhadz.com/blog/react-push-to-state-array\n    //setAllComments( [comment].concat(allComments)); //https://javascript.plainenglish.io/how-to-add-to-an-array-in-react-state-3d08ddb2e1dc\n\n    // console.log(document.getElementById('inp').value)\n    // document.getElementById('inp').value = '';\n    // console.log(document.getElementById('inp').value)\n    setComment('');\n  };\n  useEffect(() => {\n    let uniqueId = Math.random().toString(16).slice(2);\n    let val = JSON.stringify(allComments);\n    if (allComments.length > 0) {\n      localStorage.setItem(uniqueId, val);\n    }\n  }, [allComments]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comment Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"inp\",\n      placeholder: \"Enter Comment\",\n      value: comment,\n      onChange: changeFunc,\n      cols: \"50\",\n      rows: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postFunc,\n      children: \"POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), allComments.map(text => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(App, \"AUJimlbC5yPxauM8dlpUhw+xPUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","comment","setComment","changeFunc","e","target","value","allComments","setAllComments","postFunc","uniqueId","Math","random","toString","slice","val","JSON","stringify","length","localStorage","setItem","map","text"],"sources":["C:/Users/harja/Desktop/New folder/SkilloVilla/skillovilla/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction App() {\n\n  const [comment, setComment] = useState(\"\")\n  let changeFunc = (e)=> {\n    setComment(e.target.value)\n  }\n\n  const [allComments, setAllComments] = useState([])\n  let postFunc = ()=> {\n    setAllComments( (allComments) => [...allComments, comment]) //https://bobbyhadz.com/blog/react-push-to-state-array\n    //setAllComments( [comment].concat(allComments)); //https://javascript.plainenglish.io/how-to-add-to-an-array-in-react-state-3d08ddb2e1dc\n\n    // console.log(document.getElementById('inp').value)\n    // document.getElementById('inp').value = '';\n    // console.log(document.getElementById('inp').value)\n    setComment('');\n  }\n\n  useEffect(() => {\n    let uniqueId = Math.random().toString(16).slice(2);\n    let val = JSON.stringify(allComments)\n    if(allComments.length>0){\n      localStorage.setItem(uniqueId, val);\n    }\n  }, [allComments]);\n\n  return (\n    <> \n      <h1>Comment Section</h1>\n      <textarea id=\"inp\" placeholder=\"Enter Comment\" value={comment} onChange={changeFunc} cols=\"50\" rows=\"2\"></textarea>\n      <button onClick={postFunc}>POST</button>\n\n      {/* https://www.freecodecamp.org/news/javascript-map-how-to-use-the-js-map-function-array-method/ */}\n      {allComments.map( (text)=> (\n        <p>{text}</p>\n      ))}\n\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAII,UAAU,GAAIC,CAAC,IAAI;IACrBF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,IAAIU,QAAQ,GAAG,MAAK;IAClBD,cAAc,CAAGD,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAEN,OAAO,CAAC,CAAC,EAAC;IAC5D;;IAEA;IACA;IACA;IACAC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,GAAGC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IAClD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC;IACrC,IAAGA,WAAW,CAACW,MAAM,GAAC,CAAC,EAAC;MACtBC,YAAY,CAACC,OAAO,CAACV,QAAQ,EAAEK,GAAG,CAAC;IACrC;EACF,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,oBACE;IAAA,wBACE;MAAA,UAAI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAU,EAAE,EAAC,KAAK;MAAC,WAAW,EAAC,eAAe;MAAC,KAAK,EAAEN,OAAQ;MAAC,QAAQ,EAAEE,UAAW;MAAC,IAAI,EAAC,IAAI;MAAC,IAAI,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAY,eACnH;MAAQ,OAAO,EAAEM,QAAS;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,EAGvCF,WAAW,CAACc,GAAG,CAAGC,IAAI,iBACrB;MAAA,UAAIA;IAAI;MAAA;MAAA;MAAA;IAAA,QACT,CAAC;EAAA,gBAED;AAEP;AAAC,GAvCQtB,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}