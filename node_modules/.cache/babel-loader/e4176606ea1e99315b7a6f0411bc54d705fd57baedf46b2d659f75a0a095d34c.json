{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harja\\\\Desktop\\\\New folder\\\\SkilloVilla\\\\skillovilla\\\\src\\\\HarjasComponents\\\\InputComments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport StoredComments from './StoredComments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputComments() {\n  _s();\n  let refreshMemory = () => {\n    let val = localStorage.getItem('myKey');\n    if (val) {\n      return JSON.parse(localStorage.getItem('myKey'));\n    } else {\n      return [];\n    }\n  };\n  const [text, setText] = useState(\"\");\n  const [comment, setComment] = useState(refreshMemory());\n  useEffect(() => {\n    console.log(\"Effect agya\");\n    console.log(\"Comment is: \", comment);\n    localStorage.setItem('myKey', JSON.stringify(comment));\n  }, [comment]);\n  let changeFunc = e => {\n    setText(e.target.value);\n  };\n  let postFunc = () => {\n    console.log(\"POST\");\n    let temp = [];\n    temp = JSON.parse(localStorage.getItem('myKey'));\n    const newComment = {\n      id: 123,\n      username: \"SSS\",\n      body: text\n    };\n    temp.push(newComment);\n    console.log(\"TEMP IS: \", temp);\n    setComment(temp);\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comment Widget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Comment\",\n        value: text,\n        onChange: changeFunc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: postFunc,\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(InputComments, \"qe/49PVUM/bXGda2hNqeEhaRQPw=\");\n_c = InputComments;\nvar _c;\n$RefreshReg$(_c, \"InputComments\");","map":{"version":3,"names":["React","useState","useEffect","StoredComments","InputComments","refreshMemory","val","localStorage","getItem","JSON","parse","text","setText","comment","setComment","console","log","setItem","stringify","changeFunc","e","target","value","postFunc","temp","newComment","id","username","body","push"],"sources":["C:/Users/harja/Desktop/New folder/SkilloVilla/skillovilla/src/HarjasComponents/InputComments.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport StoredComments from './StoredComments';\r\n\r\nexport default function InputComments() {\r\n\r\n    let refreshMemory = ()=> {\r\n        let val = localStorage.getItem('myKey');\r\n        if(val){\r\n            return JSON.parse(localStorage.getItem('myKey'))\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [comment, setComment] = useState(refreshMemory());\r\n\r\n    useEffect(() => {\r\n        console.log(\"Effect agya\")\r\n        console.log(\"Comment is: \", comment)\r\n        localStorage.setItem('myKey', JSON.stringify(comment))\r\n    }, [comment])\r\n\r\n    let changeFunc = (e)=> {\r\n        setText(e.target.value)\r\n    }\r\n    let postFunc = ()=> {\r\n        console.log(\"POST\");\r\n\r\n        let temp = [];\r\n        temp = JSON.parse(localStorage.getItem('myKey'));\r\n        const newComment = {id: 123, username:\"SSS\", body:text}\r\n        temp.push(newComment);\r\n        console.log(\"TEMP IS: \", temp)\r\n\r\n        setComment(temp)\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"inputDiv\">\r\n                <h1>Comment Widget</h1>\r\n                <input type=\"text\" placeholder=\"Enter Comment\" value={text} onChange={changeFunc} />\r\n                <button className='btn' onClick={postFunc}>POST</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAAA;AAE9C,eAAe,SAASC,aAAa,GAAG;EAAA;EAEpC,IAAIC,aAAa,GAAG,MAAK;IACrB,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACvC,IAAGF,GAAG,EAAC;MACH,OAAOG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAACI,aAAa,EAAE,CAAC;EAEvDH,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,OAAO,CAAC;IACpCN,YAAY,CAACU,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACL,OAAO,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,IAAIM,UAAU,GAAIC,CAAC,IAAI;IACnBR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EACD,IAAIC,QAAQ,GAAG,MAAK;IAChBR,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IAEnB,IAAIQ,IAAI,GAAG,EAAE;IACbA,IAAI,GAAGf,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAChD,MAAMiB,UAAU,GAAG;MAACC,EAAE,EAAE,GAAG;MAAEC,QAAQ,EAAC,KAAK;MAAEC,IAAI,EAACjB;IAAI,CAAC;IACvDa,IAAI,CAACK,IAAI,CAACJ,UAAU,CAAC;IACrBV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEQ,IAAI,CAAC;IAE9BV,UAAU,CAACU,IAAI,CAAC;IAChBZ,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAA,UAAI;MAAc;QAAA;QAAA;QAAA;MAAA,QAAK,eACvB;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,eAAe;QAAC,KAAK,EAAED,IAAK;QAAC,QAAQ,EAAEQ;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACpF;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEI,QAAS;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACtD,iBACP;AAEX;AAAC,GA9CuBnB,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}