{"ast":null,"code":"import _slicedToArray from\"C:/Users/harja/Desktop/New folder/SkilloVilla/skillovilla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function InputComments(){//Retain memory on page refresh\nvar refreshMemory=function refreshMemory(){var val=localStorage.getItem('myKey');if(val){return JSON.parse(localStorage.getItem('myKey'));}else{return[];}};//Declaring states\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(refreshMemory()),_useState4=_slicedToArray(_useState3,2),comment=_useState4[0],setComment=_useState4[1];useEffect(function(){console.log(\"Effect agya\");console.log(\"Comment is: \",comment);localStorage.setItem('myKey',JSON.stringify(comment));},[comment]);//Function to update value in input element\nvar changeFunc=function changeFunc(e){setText(e.target.value);};//Function which runs when 'Post' button clicked\nvar postFunc=function postFunc(){if(text){var temp=[];temp=JSON.parse(localStorage.getItem('myKey'));var newComment={id:123,username:\"SSS\",body:text};temp.push(newComment);setComment(temp);setText('');}else{alert(\"Empty Comment\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"inputDiv\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Comment Widget\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Comment\",value:text,onChange:changeFunc}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:postFunc,children:\"POST\"})]})});}","map":{"version":3,"names":["React","useState","useEffect","InputComments","refreshMemory","val","localStorage","getItem","JSON","parse","text","setText","comment","setComment","console","log","setItem","stringify","changeFunc","e","target","value","postFunc","temp","newComment","id","username","body","push","alert"],"sources":["C:/Users/harja/Desktop/New folder/SkilloVilla/skillovilla/src/HarjasComponents/InputComments.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\n\r\nexport default function InputComments() {\r\n\r\n    //Retain memory on page refresh\r\n    let refreshMemory = ()=> {\r\n        let val = localStorage.getItem('myKey');\r\n        if(val){\r\n            return JSON.parse(localStorage.getItem('myKey'))\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    //Declaring states\r\n    const [text, setText] = useState(\"\")\r\n    const [comment, setComment] = useState(refreshMemory());\r\n\r\n    useEffect(() => {\r\n        console.log(\"Effect agya\")\r\n        console.log(\"Comment is: \", comment)\r\n        localStorage.setItem('myKey', JSON.stringify(comment))\r\n    }, [comment])\r\n\r\n    //Function to update value in input element\r\n    let changeFunc = (e)=> {\r\n        setText(e.target.value)\r\n    }\r\n    //Function which runs when 'Post' button clicked\r\n    let postFunc = ()=> {\r\n        if(text){\r\n            let temp = [];\r\n            temp = JSON.parse(localStorage.getItem('myKey'));\r\n            const newComment = {id: 123, username:\"SSS\", body:text}\r\n            temp.push(newComment);\r\n\r\n            setComment(temp)\r\n            setText('')\r\n        }\r\n        else{\r\n            alert(\"Empty Comment\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"inputDiv\">\r\n                <h1>Comment Widget</h1>\r\n                <input type=\"text\" placeholder=\"Enter Comment\" value={text} onChange={changeFunc} />\r\n                <button className='btn' onClick={postFunc}>POST</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"+IAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,KAAQ,OAAO,CAAC,6IAElC,cAAe,SAASC,cAAa,EAAG,CAEpC;AACA,GAAIC,cAAa,CAAG,QAAhBA,cAAa,EAAQ,CACrB,GAAIC,IAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACvC,GAAGF,GAAG,CAAC,CACH,MAAOG,KAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CACpD,CAAC,IACI,CACD,MAAO,EAAE,CACb,CACJ,CAAC,CAED;AACA,cAAwBN,QAAQ,CAAC,EAAE,CAAC,wCAA7BS,IAAI,eAAEC,OAAO,eACpB,eAA8BV,QAAQ,CAACG,aAAa,EAAE,CAAC,yCAAhDQ,OAAO,eAAEC,UAAU,eAE1BX,SAAS,CAAC,UAAM,CACZY,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEH,OAAO,CAAC,CACpCN,YAAY,CAACU,OAAO,CAAC,OAAO,CAAER,IAAI,CAACS,SAAS,CAACL,OAAO,CAAC,CAAC,CAC1D,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEb;AACA,GAAIM,WAAU,CAAG,QAAbA,WAAU,CAAIC,CAAC,CAAI,CACnBR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC3B,CAAC,CACD;AACA,GAAIC,SAAQ,CAAG,QAAXA,SAAQ,EAAQ,CAChB,GAAGZ,IAAI,CAAC,CACJ,GAAIa,KAAI,CAAG,EAAE,CACbA,IAAI,CAAGf,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAChD,GAAMiB,WAAU,CAAG,CAACC,EAAE,CAAE,GAAG,CAAEC,QAAQ,CAAC,KAAK,CAAEC,IAAI,CAACjB,IAAI,CAAC,CACvDa,IAAI,CAACK,IAAI,CAACJ,UAAU,CAAC,CAErBX,UAAU,CAACU,IAAI,CAAC,CAChBZ,OAAO,CAAC,EAAE,CAAC,CACf,CAAC,IACG,CACAkB,KAAK,CAAC,eAAe,CAAC,CAC1B,CACJ,CAAC,CAED,mBACI,sCACI,aAAK,SAAS,CAAC,UAAU,wBACrB,oBAAI,gBAAc,EAAK,cACvB,cAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAEnB,IAAK,CAAC,QAAQ,CAAEQ,UAAW,EAAG,cACpF,eAAQ,SAAS,CAAC,KAAK,CAAC,OAAO,CAAEI,QAAS,UAAC,MAAI,EAAS,GACtD,EACP,CAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}